// <auto-generated/>
#pragma warning disable CS0618
using Bund.API.Autobahn.Client.Details.Closure;
using Bund.API.Autobahn.Client.Details.Electric_charging_station;
using Bund.API.Autobahn.Client.Details.Parking_lorry;
using Bund.API.Autobahn.Client.Details.Roadworks;
using Bund.API.Autobahn.Client.Details.Warning;
using Bund.API.Autobahn.Client.Details.Webcam;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Bund.API.Autobahn.Client.Details
{
    /// <summary>
    /// Builds and executes requests for operations under \details
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    public partial class DetailsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The closure property</summary>
        public global::Bund.API.Autobahn.Client.Details.Closure.ClosureRequestBuilder Closure
        {
            get => new global::Bund.API.Autobahn.Client.Details.Closure.ClosureRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The electric_charging_station property</summary>
        public global::Bund.API.Autobahn.Client.Details.Electric_charging_station.Electric_charging_stationRequestBuilder Electric_charging_station
        {
            get => new global::Bund.API.Autobahn.Client.Details.Electric_charging_station.Electric_charging_stationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The parking_lorry property</summary>
        public global::Bund.API.Autobahn.Client.Details.Parking_lorry.Parking_lorryRequestBuilder Parking_lorry
        {
            get => new global::Bund.API.Autobahn.Client.Details.Parking_lorry.Parking_lorryRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The roadworks property</summary>
        public global::Bund.API.Autobahn.Client.Details.Roadworks.RoadworksRequestBuilder Roadworks
        {
            get => new global::Bund.API.Autobahn.Client.Details.Roadworks.RoadworksRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The warning property</summary>
        public global::Bund.API.Autobahn.Client.Details.Warning.WarningRequestBuilder Warning
        {
            get => new global::Bund.API.Autobahn.Client.Details.Warning.WarningRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The webcam property</summary>
        public global::Bund.API.Autobahn.Client.Details.Webcam.WebcamRequestBuilder Webcam
        {
            get => new global::Bund.API.Autobahn.Client.Details.Webcam.WebcamRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Bund.API.Autobahn.Client.Details.DetailsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public DetailsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/details", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Bund.API.Autobahn.Client.Details.DetailsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public DetailsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/details", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
